package com.fchavez.jashinhurst.hw4.one;

import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.SourceDataLine;

/**
 * 
 * Simple playback of linear pcm data.
 * 
 * Data for playback is generated by the Note class
 * 
 * todo: modify the note.setNote() line to suit your needs
 * 
 */
public class Tone {

	public static void main(String[] args) throws LineUnavailableException {

		Note note = new Note(16);

		//Linear PCM data to be created with byte array from note.setNote()
		final AudioFormat format = new AudioFormat(note.getSampleRate(), 8, 1, true, true);

		//open up a line with audio format
		SourceDataLine line = AudioSystem.getSourceDataLine(format);

		//get info about line
		DataLine.Info info = new DataLine.Info(SourceDataLine.class, format); // format is an AudioFormat object
		//debug
		System.out.println(info.toString());

		if (!AudioSystem.isLineSupported(info)) {
			//handle the error
			return;
		}
		// Obtain and open the line.
		try {
			line = (SourceDataLine) AudioSystem.getLine(info);
			line.open(format);
			
			//for(int i = -9; i < 3; i++) {
			//uses Midi Numbers now.
			for(int i = 41; i <= 89; i++) {
				//note.setNote(i, .25);
				note.setNote(new MIDI(i, NoteValue.QUARTER), new Tempo(240, NoteValue.QUARTER));
				//longer note duration
				//note.setNote(i, 1);

				//no need to modify these lines   
				line.start();
				line.write(note.getNote(), 0, note.getLength());
			}
			line.drain();
			line.close();
		} catch (LineUnavailableException ex) {
			// Handle the error.
			ex.printStackTrace();
		}

	}
}
